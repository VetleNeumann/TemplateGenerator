using System.Runtime.Intrinsics;
using System.Runtime.CompilerServices;
using EnCS;

namespace $namespace
{
	public partial struct $ecsName
	{
		$archTypes~>public partial struct $archTypeName : $components~>IArchType<$archTypeName, $compName, |$compName|.Vectorized, |$compName|.Array><~~>, <~
		{
			$components~>public |$compName|.Vectorized $varName;<~~>\n			<~
			$components~>
			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			static ref |$compName|.Array IArchType<$archTypeName, $compName, |$compName|.Vectorized, |$compName|.Array>.GetSingle(ref $archTypeName arch)
			{
				return ref Unsafe.As<|$compName|.Vectorized, |$compName|.Array>(ref arch.$varName);
			}

			[MethodImpl(MethodImplOptions.AggressiveInlining)]
			static ref |$compName|.Vectorized IArchType<$archTypeName, $compName, |$compName|.Vectorized, |$compName|.Array>.GetVec(ref $archTypeName arch)
			{
				return ref arch.$varName;
			}<~~>\n			<~
		}<~~>\n\n		<~
	}
}