using System.Runtime.Intrinsics;
using System.Runtime.CompilerServices;
using EnCS;

namespace $namespace
{
	public partial class $name
	{
		public void Update<T1Arch>(ref ComponentEnumerableNew<$components~>|$compName|, |$compName|.Vectorized, |$compName|.Array<~~>, <~>.Enumerator<T1Arch> en)
			where T1Arch : unmanaged, $components~>IArchType<T1Arch, |$compName|, |$compName|.Vectorized, |$compName|.Array><~~>, <~
		{
			while (en.MoveNext())
			{
				var item = en.Current;
				var remaining = en.Remaining;
				$methods|$methodType == "Single"|~>for (int i = 0; i < remaining; i++)
				{
					$methodName($components~>|$compName|.Ref.FromArray(ref item.item|$compIdx|Single, i)<~~>, <~);
				}<~|$methodType == "Vector"|~>$methodName($components~>ref item.item|$compIdx|Vec<~~>, <~);<~~>\n				<~\n
			}
		}
	}
}